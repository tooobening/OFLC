if(typeof module!=='undefined'&&typeof exports!=='undefined'&&module.exports===exports){module.exports='monospaced.elastic';}
angular.module('monospaced.elastic',[]).constant('msdElasticConfig',{append:''}).directive('msdElastic',['$timeout','$window','msdElasticConfig',function($timeout,$window,config){'use strict';return{require:'ngModel',restrict:'A, C',link:function(scope,element,attrs,ngModel){var ta=element[0],$ta=element;if(ta.nodeName!=='TEXTAREA'||!$window.getComputedStyle){return;}
$ta.css({'overflow':'hidden','overflow-y':'hidden','word-wrap':'break-word'});var text=ta.value;ta.value='';ta.value=text;var append=attrs.msdElastic?attrs.msdElastic.replace(/\\n/g,'\n'):config.append,$win=angular.element($window),mirrorInitStyle='position: absolute; top: -999px; right: auto; bottom: auto;'+'left: 0; overflow: hidden; -webkit-box-sizing: content-box;'+'-moz-box-sizing: content-box; box-sizing: content-box;'+'min-height: 0 !important; height: 0 !important; padding: 0;'+'word-wrap: break-word; border: 0;',$mirror=angular.element('<textarea aria-hidden="true" tabindex="-1" '+'style="'+mirrorInitStyle+'"/>').data('elastic',true),mirror=$mirror[0],taStyle=getComputedStyle(ta),resize=taStyle.getPropertyValue('resize'),borderBox=taStyle.getPropertyValue('box-sizing')==='border-box'||taStyle.getPropertyValue('-moz-box-sizing')==='border-box'||taStyle.getPropertyValue('-webkit-box-sizing')==='border-box',boxOuter=!borderBox?{width:0,height:0}:{width:parseInt(taStyle.getPropertyValue('border-right-width'),10)+
parseInt(taStyle.getPropertyValue('padding-right'),10)+
parseInt(taStyle.getPropertyValue('padding-left'),10)+
parseInt(taStyle.getPropertyValue('border-left-width'),10),height:parseInt(taStyle.getPropertyValue('border-top-width'),10)+
parseInt(taStyle.getPropertyValue('padding-top'),10)+
parseInt(taStyle.getPropertyValue('padding-bottom'),10)+
parseInt(taStyle.getPropertyValue('border-bottom-width'),10)},minHeightValue=parseInt(taStyle.getPropertyValue('min-height'),10),heightValue=parseInt(taStyle.getPropertyValue('height'),10),minHeight=Math.max(minHeightValue,heightValue)-boxOuter.height,maxHeight=parseInt(taStyle.getPropertyValue('max-height'),10),mirrored,active,copyStyle=['font-family','font-size','font-weight','font-style','letter-spacing','line-height','text-transform','word-spacing','text-indent'];if($ta.data('elastic')){return;}
maxHeight=maxHeight&&maxHeight>0?maxHeight:9e4;if(mirror.parentNode!==document.body){angular.element(document.body).append(mirror);}
$ta.css({'resize':(resize==='none'||resize==='vertical')?'none':'horizontal'}).data('elastic',true);function initMirror(){var mirrorStyle=mirrorInitStyle;mirrored=ta;taStyle=getComputedStyle(ta);angular.forEach(copyStyle,function(val){mirrorStyle+=val+':'+taStyle.getPropertyValue(val)+';';});mirror.setAttribute('style',mirrorStyle);}
function adjust(){var taHeight,taComputedStyleWidth,mirrorHeight,width,overflow;if(mirrored!==ta){initMirror();}
if(!active){active=true;mirror.value=ta.value+append;mirror.style.overflowY=ta.style.overflowY;taHeight=ta.style.height===''?'auto':parseInt(ta.style.height,10);taComputedStyleWidth=getComputedStyle(ta).getPropertyValue('width');if(taComputedStyleWidth.substr(taComputedStyleWidth.length-2,2)==='px'){width=parseInt(taComputedStyleWidth,10)-boxOuter.width;mirror.style.width=width+'px';}
mirrorHeight=mirror.scrollHeight;if(mirrorHeight>maxHeight){mirrorHeight=maxHeight;overflow='scroll';}else if(mirrorHeight<minHeight){mirrorHeight=minHeight;}
mirrorHeight+=boxOuter.height;ta.style.overflowY=overflow||'hidden';if(taHeight!==mirrorHeight){scope.$emit('elastic:resize',$ta,taHeight,mirrorHeight);ta.style.height=mirrorHeight+'px';}
$timeout(function(){active=false;},1);}}
function forceAdjust(){active=false;adjust();}
if('onpropertychange'in ta&&'oninput'in ta){ta['oninput']=ta.onkeyup=adjust;}else{ta['oninput']=adjust;}
$win.bind('resize',forceAdjust);scope.$watch(function(){return ngModel.$modelValue;},function(newValue){forceAdjust();});scope.$on('elastic:adjust',function(){initMirror();forceAdjust();});$timeout(adjust);scope.$on('$destroy',function(){$mirror.remove();$win.unbind('resize',forceAdjust);});}};}]);;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetSubscription',function(){return{restrict:'E',replace:true,template:''+'<div class="ods-dataset-subscription">'+'   <div ng-if="!subscribed">'+'       <button class="ods-button ods-dataset-subscription__button" '+'           ng-click="toggle()" '+'           ng-disabled="working || !loggedIn" '+'           ods-disabled-tooltip="!loggedIn" '+'           translate="ods-disabled-tooltip-text" ods-disabled-tooltip-text="You need to be registered and logged in to subscribe to a dataset.">'+'           <span ng-if="!working">'+'               <i class="fa fa-bell" aria-hidden="true"></i> <span translate>Follow</span>'+'           </span>'+'           <span ng-if="working">'+'               <ods-spinner></ods-spinner>'+'               <span translate>Subscribing</span>'+'           </span>'+'       </button>'+'   </div>'+'   <div ng-if="subscribed">'+'       <i class="fa fa-check ods-dataset-subscription__icon-subscribed" aria-hidden="true"></i> <span translate>You are subscribed</span>'+'       <button class="ods-button ods-dataset-subscription__button" '+'           ng-click="toggle()" '+'           ng-disabled="working">'+'           <span ng-if="!working">'+'               <i class="fa fa-ban ods-dataset-subscription__icon-unsubscribe" aria-hidden="true"></i> <span translate>Unsubscribe</span>'+'           </span>'+'           <span ng-if="working">'+'               <ods-spinner></ods-spinner>'+'               <span translate>Unsubscribing</span>'+'           </span>'+'       </button>'+'   </div>'+'   <p class="ods-dataset-subscription__message" ng-if="!subscribed" translate>'+'       By subscribing to this dataset, you can receive email notifications from the dataset\'s publisher if important changes happen.'+'   </p>'+'   <p class="ods-dataset-subscription__message" ng-if="subscribed" translate>'+'       You will receive email notifications from the dataset\'s publisher if important changes happen.'+'   </p>'+'</div>',scope:{preset:'=',datasetId:'@',loggedIn:'='},controller:function($scope,CoreAPI){$scope.subscribed=$scope.preset||false;$scope.working=false;$scope.toggle=function(){$scope.working=true;if($scope.subscribed){CoreAPI.account.subscriptions.datasets.unsubscribe($scope.datasetId).then(function(){$scope.subscribed=false;$scope.working=false;});}else{CoreAPI.account.subscriptions.datasets.subscribe($scope.datasetId).then(function(){$scope.subscribed=true;$scope.working=false;});}};}};});}());;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetAttachments',function(){return{restrict:'E',replace:true,scope:{dataset:'='},template:''+'<div class="ods-dataset-attachments" ng-show="dataset.attachments.length">'+'    <ods-collapsible initially-expanded="true">'+'        <ods-collapsible-above-fold>'+'            <h3 class="ods-dataset-attachments__title" translate>Attachments</h3>'+'        </ods-collapsible-above-fold>'+'        <ods-collapsible-fold>'+'            <ul class="ods-dataset-attachments__attachment-list">'+'                <li class="ods-dataset-attachments__attachment" ng-repeat="attachment in dataset.attachments">'+'                    <a class="ods-dataset-attachments__attachment-link ods-button" ods-resource-download-conditions ng-href="/api/datasets/1.0/{{dataset.datasetid}}/attachments/{{attachment.id}}/" rel="nofollow" target="_self">'+'                        <i class="fa fa-file" aria-hidden="true"></i>'+'                        <span title="{{attachment.title}}">{{attachment.title}}</span>'+'                    </a>'+'                </li>'+'            </ul>'+'        </ods-collapsible-fold>'+'    </ods-collapsible>'+'</div>'};});}());;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetReuses',['odsNotificationService','$http','config','AssetHelper','ReuseAPI','translate','odsReCaptcha','domainConfig',function(odsNotificationService,$http,config,AssetHelper,ReuseAPI,translate,odsReCaptcha,domainConfig){return{restrict:'E',replace:true,scope:{maxReuses:'=max',anonymousReuse:'=',loggedIn:'=',recaptchaPubKey:'@',config:'=',readonly:'='},templateUrl:'/static/frontend/frontoffice/components/dataset-reuses/dataset-reuses.html',link:function(scope,element){element.find('.ods-reuses__upload-button').on('click',function(e){$(element).find('input[type=file]')[0].click();});element.find('.ods-reuses__upload-input').on('change',function(){scope.upload.call(window,this);});var recaptchaPubKey=scope.recaptchaPubKey||config.RECAPTCHA_PUBLIC_KEY;scope.getRecaptchaValues=odsReCaptcha(jQuery(element[0]).find('.g-recaptcha')[0],recaptchaPubKey,config.LANGUAGE);},controller:function($scope,$element){$scope.display_reuses=true;$scope.submitAllow=$scope.anonymousReuse||$scope.loggedIn;$scope.reuseForm=false;$scope.reuse={};$scope.dirty=false;$scope.inProgress=false;$scope.error=false;$scope.extraReuses=false;$scope.uploadedFile=false;$scope.disableFormRecaptcha=domainConfig['enable_form_recaptcha']!==true||$scope.loggedIn;$scope.toggleExtraReuses=function(){$scope.extraReuses=!$scope.extraReuses;};$scope.toogleReuseForm=function(){$scope.reuseForm=!$scope.reuseForm;};$scope.upload=function(element){$scope.$apply(function(){$scope.reuseFile=element.files[0]||null;$scope.uploadedFile=!!element.files[0];});var input=$element.find('input.reuse_thumbnail_url');input.val(element.files[0]?element.files[0].name:'');input.prop('disabled',!!element.files[0]);};$scope.reset=function(){$scope.reuseFile=null;$scope.uploadedFile=false;$element.find('.ods-reuses__upload-input').val('');var input=$element.find('input.reuse_thumbnail_url');input.val('');input.prop('disabled',false);};$scope.$watch('reuse.thumbnail',function(nv){$element.find('.ods-reuses__upload-button').prop('disabled',nv);});$scope.submitReuse=function(){$scope.inProgress=true;$scope.reuse.recaptcha=!$scope.loggedIn?$scope.getRecaptchaValues():{};var data=angular.copy($scope.reuse);data.recaptcha_response=$scope.reuse.recaptcha.response||'';delete data.recaptcha;delete data.file;var success=function(data){$scope.dirty=false;$scope.inProgress=false;$scope.error=false;if(data.status=='reuse_created'){$scope.success=translate('Your reuse has been successfully created.');}else if(data.status=='reuse_pending'){$scope.success=translate('Your reuse will be reviewed soon.');}};var error=function(data){$scope.inProgress=false;$scope.success=false;odsNotificationService.markNotificationAsHandled(data);if(data.status==='captcha_techerror'){$scope.error=translate('There has been an error during your request.');}else if(data.status==='captcha_failed'){$scope.error=translate('You entered a wrong captcha.');}else if(data.status==='error'){$scope.error=translate(data.message);}else{$scope.error=data.error;}};AssetHelper.post(ReuseAPI.save_url,$scope.reuseFile,$scope.config,data).then(success,error);};$scope.$watch('reuse',function(nv,ov){if(nv!==ov){$scope.dirty=true;if($scope.success){$scope.success=false;if(!$scope.loggedIn){$scope.refreshCaptcha();}}}},true);ReuseAPI.list().then(function(response){var data=response.data;$scope.reuses=data.reuses;},function(response){var data=response.data;if(data.errorcode===90001){odsNotificationService.markNotificationAsHandled(data);$scope.reuses=[];}});}};}]);}());;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetMetadataBlock',function(){return{restrict:'E',replace:true,scope:{templateName:'=',metadataSchema:'=',values:'=',blacklist:'='},template:''+'<div class="ods-dataset-metadata-block">'+'    <div class="ods-dataset-metadata-block__metadata" ng-repeat="meta in schema" ng-if="values[meta.name]" ng-switch="meta.name">'+'        <div class="ods-dataset-metadata-block__metadata-name" ng-bind="translate(meta.label)"></div>'+'        <div class="ods-dataset-metadata-block__metadata-value ods-dataset-metadata-block__metadata-value--license" ng-switch-when="license">'+'           <a ng-if="values[\'license_url\']" ng-href="{{ values[\'license_url\'] }}" ng-bind="values[\'license\']" target="_blank" rel="nofollow"></a>'+'           <span ng-if="!values[\'license_url\']" ng-bind="values[\'license\']"></span>'+'        </div>'+'        <div class="ods-dataset-metadata-block__metadata-value" ng-switch-when="language" ng-bind-html="values[meta.name]|isocode_to_language"></div>'+'        <div class="ods-dataset-metadata-block__metadata-value" ng-switch-default ng-if="meta.type===\'html\'" ng-bind-html="values[meta.name]|formatMeta:meta.type|nofollow"></div>'+'        <div class="ods-dataset-metadata-block__metadata-value ods-dataset-metadata-block__metadata-value--default" ng-if="meta.type !== \'html\'" ng-switch-default ng-bind-html="values[meta.name]|formatMeta:meta.type|prettyText|nofollow"></div>'+'    </div>'+'</div>',controller:function($scope,translate){$scope.translate=translate;$scope.schema=angular.copy($scope.metadataSchema);if($scope.blacklist){$scope.schema=$scope.metadataSchema.filter(function(meta){return $scope.blacklist.indexOf(meta.name)===-1;});}
if($scope.values){$scope.schema.forEach(function(field){if($scope.values[field.name]){if(field.type==='uri_enumlist'){$scope.values[field.name].forEach(function(elem,index){field.values.forEach(function(item){if(item.value===elem){$scope.values[field.name][index]=translate(item.label,null,"metadata."+$scope.templateName+"."+field.name);}});});}else if(field.type==='uri_enum'||($scope.templateName==='dcat'&&field.name==='accrualperiodicity')){field.values.forEach(function(item){if(item.value===$scope.values[field.name]){$scope.values[field.name]=translate(item.label,null,"metadata."+$scope.templateName+"."+field.name);}});}}});}}};});app.directive('odsDatasetMetadataBlockSelector',function(){return{restrict:'E',replace:true,scope:{metadataTemplates:'=',values:'=',blacklist:'='},template:'<div class="ods-dataset-metadata-block-selector">'+'    <div ng-repeat="tpl in templates" ng-show="tpl.name != \'semantic\' && metadata[tpl.name]">'+'       <h3>{{ tpl.title }}</h3>'+'       <ods-dataset-metadata-block template-name="tpl.name" metadata-schema="tpl.schema" values="metadata[tpl.name]"></ods-dataset-metadata-block>'+'    </div>'+'</div>',controller:function($scope,translate){$scope.metadata=angular.copy($scope.values);$scope.templates=angular.copy($scope.metadataTemplates);angular.forEach($scope.templates,function(template){if($scope.metadata[template.name]){template.schema.forEach(function(field){if(($scope.blacklist&&$scope.blacklist.includes(template.name+'.'+field.name))||($scope.metadata[template.name][field.name]&&field.inheritance)){delete $scope.metadata[template.name][field.name];}});}});if($scope.values){$scope.templates=$scope.templates.filter(function(template){return!angular.equals($scope.metadata[template.name],{});});}}};});app.directive('odsDatasetMetadataTerritory',function(){return{restrict:'E',replace:true,scope:{dataset:'='},template:''+'<div class="ods-dataset-metadata-block__territory">'+'   <span ng-repeat="territory in territories">'+'       <span ng-if="territory.shape">'+'           <ods-geotooltip width="400" height="300" geojson="territory.shape">'+'               <i class="fa fa-map-marker"></i> {{territory.name}}'+'           </ods-geotooltip>'+'       </span>'+'       <span ng-if="!territory.shape">'+'           <i class="fa fa-map-marker"></i> {{territory.name}}'+'       </span>'+'       <span ng-show="!$last">, </span>'+'   </span>'+'</div>',controller:['$scope','ODSAPI','config',function($scope,ODSAPI,config){var uids=$scope.dataset.metas.geographic_reference;if(!uids||!uids.length){return;}
$scope.territories=[];angular.forEach(uids,function(uid,index){var territory={uid:uid,name:$scope.dataset.metas.territory[index]};ODSAPI.georeference.uid(uid).then(function(response){var data=response.data;territory.shape=data.geom_geonav||data.geom;if(data.altname&&data.altname[config.LANGUAGE]){territory.name=data.altname[config.LANGUAGE];}}).finally(function(){$scope.territories.push(territory);});});}]}});}());;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetApiConsole',function(){return{restrict:'E',templateUrl:'/static/frontend/frontoffice/components/dataset-api-console/dataset-api-console.html',scope:{context:'='},controller:function($scope,ServiceDescription,SearchAPI,APIParamsV1ToV2){$scope.api={parameters:{limit:20}};$scope.service=ServiceDescription;$scope.pageParameters={};var unWatchSchema=$scope.$watch('context.dataset',function(newValue){if(newValue&&newValue.datasetid){unWatchSchema();$scope.staticSearchOptions={dataset:$scope.context.dataset.datasetid};$.extend($scope.api.parameters,$scope.staticSearchOptions);}},true);$scope.$watch('context.parameters',function(nv){var refines={};Object.entries(nv).map(function(entry){if(entry[0].startsWith('refine.')||entry[0].startsWith('geofilter.')){refines[entry[0]]=entry[1];}});$scope.pageParameters=APIParamsV1ToV2(refines,$scope.context.dataset.fields);});}};});app.factory('RecordsSearchParameters',['translate',function(translate){return[{'name':'select','helptext':translate('Fields to select'),'doc':'https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Select-clause'},{'name':'where','helptext':translate('Filtering condition'),'doc':'https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Where-clause'},{'name':'group_by','helptext':translate('Grouping parameter'),'doc':'https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Group-by-clause'},{'name':'order_by','helptext':translate('Ordering parameter'),'doc':'https://help.opendatasoft.com/apis/ods-explore-v2/#section/Opendatasoft-Query-Language-(ODSQL)/Order-by-clause'},{'name':'limit','type':'integer','helptext':translate('Limit number of results')},{'name':'offset','type':'integer','helptext':translate('Offset for results')},{'name':'refine','type':'hierarchical','helptext':translate('Refinements to apply'),'hierarchy':[translate('Facet name'),translate('Value')]},{'name':'exclude','type':'hierarchical','helptext':translate('Exclusions to apply'),'hierarchy':[translate('Facet name'),translate('Value')]},{'name':'lang','helptext':translate('2-letters language code for linguistic text features')},{'name':'timezone','type':'text','helptext':translate('The timezone used to interpret dates and times in queries and records.'),'default':jstz.determine().name()}];}]);app.factory('RecordsSearchUrlParameters',['translate',function(translate){return[{'name':'dataset','readonly':true,'helptext':translate('Dataset ID')},];}]);app.factory('ServiceDescription',['RecordsSearchParameters','RecordsSearchUrlParameters',function(RecordsSearchParameters,RecordsSearchUrlParameters){return{id:'records_search',label:'Records Search',description:'Search for records inside a dataset',url:'/api/explore/v2.1/catalog/datasets/url_dataset/records',method:'GET',parameters:RecordsSearchParameters,urlParameters:RecordsSearchUrlParameters,};}]);}());;(function(){'use strict';var mod=angular.module('ods.frontend');mod.directive("odsDatasetExport",['EPSG',function(EPSG){return{restrict:'E',templateUrl:'/static/frontend/frontoffice/components/dataset-export/dataset-export.html',scope:{context:'=',needConditionsAccepted:'=?',downloadTrackers:'=?',conditionsVersion:'=?',snapshots:'=?',staticexports:'=?',shapefileExportLimit:'@',xiti:'=?'},replace:true,controller:function($scope,config,SearchAPI){$scope.config=config;$scope.exportParameters={};$scope.snapshotList=[];$scope.staticexportsList=[];$scope.context.wait().then(function(){if($scope.snapshots){SearchAPI.snapshots.list($scope.context.dataset.datasetid).then(function(response){var data=response.data;$scope.snapshotList=data;});}
if($scope.staticexports){SearchAPI.static_exports.list($scope.context.dataset.datasetid).then(function(response){var data=response.data;var exportList=[];var index=0;for(index=0;index<data["static_exports"].length;index++){exportList.push(data["static_exports"][index]["static_export"])}
$scope.staticexportsList=exportList;});}});$scope.downloadTrackers=[];if($scope.xiti){var xitiANXTracker=function(event,format,searchOptions){var clickPage=window.xtpage+'::export::'+format;if(searchOptions){angular.forEach(searchOptions,function(value,key){if(value&&(key==='q'||key.indexOf('refine.')===0||key.indexOf('geofilter.polygon')===0)){clickPage+='::'+encodeURIComponent(key)+'-'+encodeURIComponent(value);}});}
return xt_click(this,'C',window.xtn2,clickPage,'T');};$scope.downloadTrackers.push(xitiANXTracker);}
if($scope.context.dataset.extra_metas.exporters&&$scope.context.dataset.extra_metas.exporters.additional_projections&&$scope.context.dataset.extra_metas.exporters.additional_projections.length){$scope.epsgList=[{label:'WGS84 (EPSG:4326)',value:''}];angular.forEach($scope.context.dataset.extra_metas.exporters.additional_projections,function(epsg){$scope.epsgList.push({label:EPSG.nameFromEPSG(epsg),value:epsg});});$scope.exportParameters.epsg='';}}};}]);mod.directive('odsDatasetExportLink',['MixpanelTrackEvent',function(MixpanelTrackEvent){var encodeURIValue=function(key,value){if(angular.isString(value)){return'&'+key+'='+encodeURIComponent(value);}else{var qs='';angular.forEach(value,function(singleVal){qs+='&'+key+'='+encodeURIComponent(singleVal);});return qs;}};return{restrict:'EA',template:''+'<div class="ods-dataset-export-link">'+'    <span class="ods-dataset-export-link__format-name">{{ formatLabel }}</span>'+'    <a rel="nofollow" '+'       href="{{ buildUrl(false) }}" '+'       ng-click="triggerTrackers($event, false)" '+'       class="ods-dataset-export-link__link"'+'       ng-class="{\'ods-dataset-export-link__link--disabled\': isDatasetAboveLimit()}"'+'       target="_self"'+'       aria-label="Dataset export ({{ formatLabel }})"'+'       translate="aria-label">'+'        <i class="fa fa-download" aria-hidden="true"></i>'+'        <span translate aria-hidden="true">Whole dataset</span>'+'    </a>'+'    <a ng-if="isDataFiltered() && nhits>0" '+'       rel="nofollow" '+'       href="{{ buildUrl(true) }}" '+'       class="ods-dataset-export-link__link"'+'       ng-class="{\'ods-dataset-export-link__link--disabled\': isCurrentDataAboveLimit()}"'+'       ng-click="triggerTrackers($event, true)" '+'       target="_self">'+'        <i class="fa fa-download" aria-hidden="true"></i>'+'        <span translate>Only the {{ nhits }} selected records</span>'+'    </a>'+'    <div ng-show="isDatasetAboveLimit()"'+'       class="ods-dataset-export-link__warning">'+'        <i class="fa fa-warning" aria-hidden="true"></i>'+'        <span translate>This export format is limited to {{ recordsLimit|number }} records. You can download a smaller part of the dataset by filtering it.</span>'+'    </div>'+'    <div class="ods-export-link__explanations" ng-transclude></div>'+'</div>',scope:{context:'=',nhits:'=',formatLabel:'@',formatExtension:'@',recordsLimit:'@',downloadTrackers:'=',exportParameters:'=',csvDelimiter:'@'},replace:true,transclude:true,controller:['$scope','config','APIParamsV1ToV2',function($scope,config,APIParamsV1ToV2){var filterParameters=['q','geofilter.distance','geofilter.polygon','refine.','exclude.'];$scope.isDataFiltered=function(){for(var key in $scope.context.parameters){for(var i=0;i<filterParameters.length;i++){var relevantName=filterParameters[i];if(key.substring(0,relevantName.length)==relevantName&&$scope.context.parameters[key]!==''){return true;}}}
return false;};$scope.buildUrl=function(includeFilters){var v2Parameters;if(includeFilters){v2Parameters=APIParamsV1ToV2($scope.context.parameters,$scope.context.dataset.fields);}else{v2Parameters={};}
var url='/api/explore/v2.1/';if($scope.context.parameters.source==='monitoring'){url+='monitoring/';}else if(config.HAS_SHARED_CATALOG&&$scope.context.dataset.datasetid.indexOf('@')>0){url+='shared/';}else{url+='catalog/';}
url+='datasets/'+$scope.context.dataset.datasetid+'/exports/'+$scope.formatExtension;if($scope.context.dataset.metas.timezone){v2Parameters.timezone=$scope.context.dataset.metas.timezone;}else{v2Parameters.timezone=jstz.determine().name();}
if($scope.context.parameters.apikey){v2Parameters.apikey=$scope.context.parameters.apikey;}
if(['csv','xlsx'].indexOf($scope.formatExtension)>-1){v2Parameters.use_labels='true';}
if($scope.formatExtension==='csv'&&$scope.csvDelimiter){v2Parameters.delimiter=$scope.csvDelimiter;}
url+='?lang='+config.LANGUAGE;angular.extend(v2Parameters,$scope.exportParameters);angular.forEach(v2Parameters,function(value,key){if(value!==''&&value!==null){url+=encodeURIValue(key,value);}});return url;};$scope.triggerTrackers=function(event,includeFilters){if(!$scope.downloadTrackers){return;}
for(var i=0;i<$scope.downloadTrackers.length;i++){$scope.downloadTrackers[i](event,$scope.formatExtension,includeFilters?$scope.context.parameters:null);}
if(MixpanelTrackEvent.enabled()){const recordsCount=$scope.context.dataset.metas.records_count;const recordsSize=$scope.context.dataset.extra_metas.processing.records_size;const eventProperties={datasetTitle:$scope.context.dataset.metas.title,format:$scope.formatLabel,popularityScore:$scope.context.dataset.extra_metas.explore.popularity_score,recordsCount:includeFilters?$scope.nhits:recordsCount,recordsSize:(includeFilters?$scope.nhits:recordsCount)*recordsSize/recordsCount,language:config.LANGUAGE,isFiltered:$scope.isDataFiltered(),};MixpanelTrackEvent.track('exports-clicked',eventProperties,config.DATASET_ID);}};$scope.isDatasetAboveLimit=function(){return $scope.recordsLimit&&($scope.context.dataset.metas.records_count>$scope.recordsLimit);};$scope.isCurrentDataAboveLimit=function(){return $scope.recordsLimit&&($scope.nhits>$scope.recordsLimit);};}]};}]);mod.directive('odsMandatoryLicense',['$interpolate','translate',function($interpolate,translate){var isAccepted=function(storagePrefix,conditionsVersion,dataLicense){var key=storagePrefix+'@accepted_conditions@'+conditionsVersion+'@'+dataLicense;return localStorage.getItem(key);};var setAccepted=function(storagePrefix,conditionsVersion,dataLicense){var cleanupList=[];for(var i=0;i<localStorage.length;i++){var itemKey=localStorage.key(i);if((itemKey.indexOf(storagePrefix+'@accepted_conditions@')===0)&&(itemKey.indexOf(storagePrefix+'@accepted_conditions@'+conditionsVersion+'@')!==0)){cleanupList.push(itemKey);}}
if(cleanupList.length>0){for(var j=0;j<cleanupList.length;j++){localStorage.removeItem(cleanupList[j]);}}
var key=storagePrefix+'@accepted_conditions@'+conditionsVersion+'@'+dataLicense;localStorage.setItem(key,true);};return{restrict:'EA',scope:{active:'=',storagePrefix:'=',licenseName:'=',licenseUrl:'=',conditionsVersion:'=',action:'@'},replace:true,transclude:true,template:''+'<div class="ods-dataset-export__mandatory-license">'+'    <div ng-transclude></div>'+'    <div class="ods-dataset-export__mandatory-license__license-content">'+'        <p ng-bind-html="informationText"></p>'+'        <button class="ods-button" type="button" '+'                ng-click="accept()" >'+'            <i class="fa fa-check" aria-hidden="true"></i>'+'            <span translate>I accept the portal\'s terms and conditions and the license applicable to the dataset.</span>'+'        </button>'+'    </div>'+'</div>',link:function(scope,element){var protectedElement=angular.element(element.children()[0]);var overlayElement=angular.element(element.children()[1]);var informationText='';var datasetLicenseName='';var domainTermsUrl='/conditions';if(scope.licenseName){if(scope.licenseUrl){datasetLicenseName='<a href="{{licenseUrl}}" rel="nofollow" target="_blank">{{ licenseName }}</a>';}else{datasetLicenseName='<span>{{ licenseName }}</span>';}}
if(scope.action==='api'){if(scope.licenseName){informationText=translate('In order to access this API, you need to accept the portal\'s <a href="{{domainTermsUrl}}">terms and conditions</a> and the dataset\'s license ({{datasetLicenseName}}).');}else{informationText=translate('In order to access this API, you need to accept the portal\'s <a href="{{domainTermsUrl}}">terms and conditions</a>.');}}else if(scope.action==='download'){if(scope.licenseName){informationText=translate('In order to download this dataset, you need to accept the portal\'s <a href="{{domainTermsUrl}}">terms and conditions</a> and the dataset\'s license ({{datasetLicenseName}}).');}else{informationText=translate('In order to download this dataset, you need to accept the portal\'s <a href="{{domainTermsUrl}}">terms and conditions</a>.');}}else{console.error('Invalid action parameter for odsMandatoryLicense.');}
scope.informationText=$interpolate(informationText)({datasetLicenseName:$interpolate(datasetLicenseName)({licenseName:ODS.StringUtils.escapeHTML(scope.licenseName||""),licenseUrl:scope.licenseUrl,}),domainTermsUrl:domainTermsUrl,});if(scope.active){if(!isAccepted(scope.storagePrefix,scope.conditionsVersion||'',scope.licenseName||'')){protectedElement.css('visibility','hidden');}else{overlayElement.css('display','none');}
scope.accept=function(){setAccepted(scope.storagePrefix,scope.conditionsVersion||'',scope.licenseName||'');overlayElement.css('display','none');protectedElement.css('visibility','visible');};}else{overlayElement.css('display','none');}}};}]);}());;(function(){'use strict';var mod=angular.module('ods.frontend');var include_geojson_definitions=function(json_schema){var geojson_definitions={"geoJSON":{"title":"Geo JSON object","description":"Schema for a Geo JSON object","type":"object","required":["type"],"properties":{"crs":{"$ref":"#/definitions/crs"},"bbox":{"$ref":"#/definitions/bbox"}},"oneOf":[{"$ref":"#/definitions/geometry"},{"$ref":"#/definitions/geometryCollection"},{"$ref":"#/definitions/feature"},{"$ref":"#/definitions/featureCollection"}]},"bbox":{"description":"A bounding box as defined by GeoJSON","type":"array","items":{"type":"number"}},"crs":{"title":"crs","description":"a Coordinate Reference System object","type":["object","null"],"required":["type","properties"],"properties":{"type":{"type":"string"},"properties":{"type":"object"}},"additionalProperties":false,"oneOf":[{"$ref":"#/definitions/namedCrs"},{"$ref":"#/definitions/linkedCrs"}]},"namedCrs":{"properties":{"type":{"enum":["name"]},"properties":{"required":["name"],"additionalProperties":false,"properties":{"name":{"type":"string"}}}}},"linkedObject":{"type":"object","required":["href"],"properties":{"href":{"type":"string","format":"uri"},"type":{"type":"string","description":"Suggested values: proj4, ogjwkt, esriwkt"}}},"linkedCrs":{"properties":{"type":{"enum":["link"]},"properties":{"$ref":"#/definitions/linkedObject"}}},"geometryCollection":{"title":"GeometryCollection","description":"A collection of geometry objects","required":["geometries"],"properties":{"type":{"enum":["GeometryCollection"]},"geometries":{"type":"array","items":{"$ref":"http://json-schema.org/geojson/geometry.json#"}}}},"feature":{"title":"Feature","description":"A Geo JSON feature object","required":["geometry","properties"],"properties":{"type":{"enum":["Feature"]},"geometry":{"oneOf":[{"type":"null"},{"$ref":"#/definitions/geometry"}]},"properties":{"type":["object","null"]},"id":{}}},"featureCollection":{"title":"FeatureCollection","description":"A Geo JSON feature collection","required":["features"],"properties":{"type":{"enum":["FeatureCollection"]},"features":{"type":"array","items":{"$ref":"#/definitions/feature"}}}},"geometry":{"title":"geometry","description":"One geometry as defined by GeoJSON","type":"object","required":["type","coordinates"],"oneOf":[{"title":"Point","properties":{"type":{"enum":["Point"]},"coordinates":{"$ref":"#/definitions/position"}}},{"title":"MultiPoint","properties":{"type":{"enum":["MultiPoint"]},"coordinates":{"$ref":"#/definitions/positionArray"}}},{"title":"LineString","properties":{"type":{"enum":["LineString"]},"coordinates":{"$ref":"#/definitions/lineString"}}},{"title":"MultiLineString","properties":{"type":{"enum":["MultiLineString"]},"coordinates":{"type":"array","items":{"$ref":"#/definitions/lineString"}}}},{"title":"Polygon","properties":{"type":{"enum":["Polygon"]},"coordinates":{"$ref":"#/definitions/polygon"}}},{"title":"MultiPolygon","properties":{"type":{"enum":["MultiPolygon"]},"coordinates":{"type":"array","items":{"$ref":"#/definitions/polygon"}}}}],"position":{"description":"A single position","type":"array","minItems":2,"items":[{"type":"number"},{"type":"number"}],"additionalItems":false},"positionArray":{"description":"An array of positions","type":"array","items":{"$ref":"#/definitions/position"}},"lineString":{"description":"An array of two or more positions","allOf":[{"$ref":"#/definitions/positionArray"},{"minItems":2}]},"linearRing":{"description":"An array of four positions where the first equals the last","allOf":[{"$ref":"#/definitions/positionArray"},{"minItems":4}]},"polygon":{"description":"An array of linear rings","type":"array","items":{"$ref":"#/definitions/linearRing"}}}};for(var def in geojson_definitions){if(geojson_definitions.hasOwnProperty(def)){json_schema.definitions[def]=geojson_definitions[def];}}};mod.directive('odsDatasetJsonSchema',function(){return{restrict:'E',replace:true,scope:{'context':'='},template:''+'<div>'+'   <div contenteditable="true" '+'        ods-json-formatter="json_schema"'+'        class="ods-dataset-json-schema"></div>'+'</div>',link:function(scope){scope.json_schema={};var build_json_schema=function(){var dataset=scope.context.dataset;var json_schema={title:dataset.datasetid,type:"object",oneOf:[{$ref:'#/definitions/'+dataset.datasetid}],definitions:{}};json_schema.definitions[dataset.datasetid]={properties:{records:{type:"array",items:{$ref:'#/definitions/'+dataset.datasetid+'_records'}}}};var fields={};var type_templates={text:{type:'string'},date:{type:'string',format:'date'},datetime:{type:'string',format:'date-time'},int:{type:'integer'},double:{type:'number'},geo_point_2d:{type:'array',minItems:2,maxItems:2,items:{type:'number'}},geo_shape:{type:'object',"oneOf":[{"$ref":"#/definitions/geometry"}]},ip_address:{type:'string'}};for(var i in dataset.fields){var field=dataset.fields[i];if(field.type in type_templates){fields[field.name]=angular.copy(type_templates[field.type]);}else{fields[field.name]={type:'string'};}
if(field.type==='geo_point_2d'||field.type==='geo_shape'){include_geojson_definitions(json_schema);}
fields[field.name].title=field.label;fields[field.name].description=field.description?field.description:'';angular.forEach(field.annotations,function(annotation){if(annotation.name==='unit'&&annotation.args&&annotation.args.length>0){fields[field.name].unit=annotation.args[0];}});}
json_schema.definitions[dataset.datasetid+'_records']={properties:{fields:{type:'object',properties:fields}}};return json_schema;};scope.context.wait().then(function(){scope.json_schema=build_json_schema();});}};});}());;(function(){'use strict';var app=angular.module('ods.frontend');app.directive('odsDatasetSimilar',['MixpanelTrackEvent',function(MixpanelTrackEvent){return{restrict:'E',replace:true,template:''+'<div class="ods-dataset-similar-datasets" ng-show="similarDatasets.length > 0">'+'   <h3 translate>Similar datasets</h3>'+'   <ul class="ods-dataset-similar__list">'+'       <li ng-repeat="dataset in similarDatasets" class="ods-dataset-similar__dataset" ods-full-click>'+'           <div class="ods-dataset-similar__dataset-title">'+'               <ods-theme-picto theme="{{ dataset.theme|firstValue }}"></ods-theme-picto>'+'               <a'+'                   ng-href="/explore/dataset/{{dataset.datasetid}}/"'+'                   ng-click="triggerTrackers(dataset, $index + 1)"'+'                   ods-main-click>'+'                   {{ dataset.title }}'+'               </a>'+'           </div>'+'           <div class="ods-dataset-similar__dataset-description" ng-bind-html="dataset.description|shortSummary|prettyText"></div>'+'       </li>'+'   </ul>'+'</div>',scope:{datasetId:'@',source:'@',minimumScore:'@'},controller:['$scope','ODSAPIv2','config',function($scope,ODSAPIv2,config){ODSAPIv2.catalog.search({domainUrl:'',parameters:{source:$scope.source||undefined},},{where:'not(datasetid = "'+$scope.datasetId+'")',select:'datasetid, title, description, theme, score() as score',order_by:'dataset_similarity("'+$scope.datasetId+'")',limit:4,lang:config.LANGUAGE}).then(function(response){$scope.similarDatasets=response.data.results.filter(function(dataset){return dataset.score>=parseFloat($scope.minimumScore);});});$scope.triggerTrackers=function(dataset,rank){if(MixpanelTrackEvent.enabled()){const eventProperties={sourceDatasetId:$scope.datasetId,targetDatasetId:dataset.datasetid,targetDatasetScore:dataset.score,targetDatasetRank:rank,};MixpanelTrackEvent.track('similar-dataset-clicked',eventProperties,$scope.datasetId,{transport:'sendBeacon'},);}};}]};}]);}());;(function(){'use strict';var app=angular.module('ods.frontend');var disqusShortnamePattern=/^[a-z0-9-]*$/g;app.directive('disqus',['$location','$window','config',function($location,$window,config){function disqus(){if(!$window.disqus_shortname.match(disqusShortnamePattern)){console.error('The Disqus shortname should be a string with only alphanumeric characters or '+'dashes, such as "mydisqusshortname"; but the received value is "'+$window.disqus_shortname+'".');return;}
var dsq=document.createElement('script');dsq.type='text/javascript';dsq.async=true;dsq.src='//'+$window.disqus_shortname+'.disqus.com/embed.js';(document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(dsq);}
return{restrict:'E',replace:true,scope:{'shortname':'@','dataset':'='},template:'<div id="disqus_thread"></div>',link:function(scope){scope.$watch('[shortname, dataset]',function(){if(scope.shortname&&scope.dataset&&scope.dataset.datasetid){$window.disqus_shortname=scope.shortname.toLowerCase();$window.disqus_identifier=scope.dataset.datasetid;$window.disqus_title=scope.dataset.metas.title;$window.disqus_url=$location.absUrl();$window.disqus_config=function(){this.language=config.LANGUAGE;};disqus();}},true);}};}]);app.directive('disqusCount',['$http','$sce',function($http,$sce){function getApiUrl(api,api_key,forum,ident){return'https://disqus.com/api/3.0/'+api+'.jsonp'+'?api_key='+api_key+'&forum='+forum+'&thread=ident:'+ident;}
function getThreadsApiUrl(api_key,forum,ident){return getApiUrl('threads/details',api_key,forum,ident);}
return{restrict:'A',controller:function($scope,$element,$attrs){$scope.disqus={'count':0};$scope.apiKey=$attrs.disqusApiKey;$scope.shortname=$attrs.disqusShortname.toLowerCase();$scope.datasetId=$attrs.disqusDatasetid;$scope.$watch('[apiKey, shortname, datasetId]',function(){if($scope.apiKey&&$scope.shortname&&$scope.datasetId){var url=getThreadsApiUrl($scope.apiKey,$scope.shortname,$scope.datasetId);$http.jsonp($sce.trustAsResourceUrl(url),{'jsonpCallbackParam':'callback'}).then(function(response){var data=response.data;if(data.code===0){$scope.disqus.count=data.response.posts;}});}},true);}};}]);}());;(function(){"use strict";var app=angular.module('ods.frontend');app.service('MapbuilderStorage',['ContextHelper','$q','MapbuilderAPI','MapHelper',function(ContextHelper,$q,MapbuilderAPI,MapHelper){var LOCALSTORAGE_PREFIX="mapbuilder_";function getConfigurationFromLocalStorage(slug){var stored=localStorage.getItem(LOCALSTORAGE_PREFIX+slug);return stored;}
function getConfigurationFromServer(slug){var deferred=$q.defer();MapbuilderAPI.get(slug).then(function(response){deferred.resolve(response.data);});return deferred.promise;}
function saveConfigurationToLocalStorage(slug,configurationString){localStorage.setItem(LOCALSTORAGE_PREFIX+slug,configurationString);}
function saveConfigurationToServer(slug,configurationString){var deferred=$q.defer();MapbuilderAPI.save(slug,configurationString).then(function(response){deferred.resolve(response.data.last_modification);});return deferred.promise;}
function saveNewConfigurationToServer(configurationString){var deferred=$q.defer();MapbuilderAPI.create(configurationString).then(function(response){var data=response.data;deferred.resolve([data.persist_id,data.last_modification]);});return deferred.promise;}
function deleteConfigurationFromLocalStorage(slug){localStorage.removeItem(LOCALSTORAGE_PREFIX+slug);}
function deleteConfigurationFromServer(slug){return MapbuilderAPI['delete'](slug);}
return function(slug){if(slug){var onPersistStorageCallbacks=[];return{isPersisted:function(){return slug[0]!=='+';},getConfiguration:function(){if(this.isPersisted()){return getConfigurationFromServer(slug).then(this.deserializeConfiguration);}else{var configString=getConfigurationFromLocalStorage(slug);if(angular.isDefined(configString)){return this.deserializeConfiguration(configString);}else{return null;}}},saveConfiguration:function(config){if(!angular.isObject(config)){console.error('Should not happen anymore: saveConfiguration on a string');}
if(this.isPersisted()){return saveConfigurationToServer(slug,this.serializeConfiguration(config));}else{config.last_modification=(new Date()).toISOString();if(config.value.groups.length){saveConfigurationToLocalStorage(slug,this.serializeConfiguration(config));}else{deleteConfigurationFromLocalStorage(slug);}
var deferred=$q.defer();deferred.resolve(config.last_modification);return deferred.promise;}},persistStorage:function(config){var deferred=$q.defer();if(angular.isObject(config)){config=this.serializeConfiguration(config);}
saveNewConfigurationToServer(config).then(function(result){deleteConfigurationFromLocalStorage(slug);var newSlug=result[0],lastModified=result[1];slug=newSlug;onPersistStorageCallbacks.forEach(function(callback){callback(slug);});deferred.resolve([newSlug,lastModified]);});return deferred.promise;},onPersistStorage:function(callback){onPersistStorageCallbacks.push(callback);},serializeConfiguration:function(configuration,skipMetadata){skipMetadata=!!skipMetadata;return JSON.stringify(configuration,function(key,value){if(typeof(value)==="function"){return undefined;}
if(key.substring(0,2)==='$$'){return undefined;}
if(key[0]==='_'){return undefined;}
if(key==='context'&&value.dataset){var res={datasetId:value.dataset.datasetid,parameters:value.parameters};if(value.source){res.source=value.source;}
return res;}
if(skipMetadata){if(['last_modification'].indexOf(key)>=0){return undefined;}}
return value;});},deserializeConfiguration:function(configuration){var deferred=$q.defer();var contextPromises=[];if(angular.isString(configuration)){configuration=angular.fromJson(configuration);}
if(angular.isObject(configuration)&&angular.isObject(configuration.value)&&angular.isArray(configuration.value.groups)){configuration.value.groups.forEach(function(group){group.layers.forEach(function(layer){MapHelper.MapConfiguration.createLayerId(layer);layer.context=ContextHelper.getDatasetContext(ODS.StringUtils.getRandomUUID(),layer.context.domainId||null,layer.context.datasetId,layer.context.parameters||{},layer.context.source,layer.context.apikey);contextPromises.push(layer.context.wait());});});}
var checkPromiseStatus=function(promise){return promise.$$state.status!==2&&promise.$$state.status!==0;};var resolvedPromises=function(promises){$q.all(promises).then(function(){deferred.resolve(configuration);}).catch(function(){promises=promises.filter(checkPromiseStatus);resolvedPromises(promises);});};resolvedPromises(contextPromises);return deferred.promise;},duplicate:function(){var service=this;var deferred=$q.defer();if(this.isPersisted()){getConfigurationFromServer(slug).then(function(config){saveNewConfigurationToServer(config).then(function(result){slug=result[0];deferred.resolve(slug);});});return deferred.promise;}else{var config=getConfigurationFromLocalStorage(slug);var configObject=JSON.parse(config);configObject.persist_id='+'+ODS.StringUtils.getRandomUUID(16);slug=configObject.persist_id;saveConfigurationToLocalStorage(slug,JSON.stringify(configObject));deferred.resolve(slug);return deferred.promise;}},'delete':function(){if(this.isPersisted()){return deleteConfigurationFromServer(slug);}else{var deferred=$q.defer();deleteConfigurationFromLocalStorage(slug);deferred.resolve();return deferred.promise;}}};}else{return{getLocalConfigurationList:function(){var list=[];Object.keys(localStorage).forEach(function(localKey){if(localKey.startsWith(LOCALSTORAGE_PREFIX)){list.push(JSON.parse(localStorage.getItem(localKey)));}});list.sort(function(a,b){return a.last_modification<b.last_modification?1:a.last_modification>b.last_modification?-1:0;});return list;},getPersistedConfigurationList:function(){var deferred=$q.defer();MapbuilderAPI.list().then(function(response){deferred.resolve(response.data);});return deferred.promise;}};}};}]);}());;(function(){'use strict';var mod=angular.module('ods.frontend');mod.controller('ExploreDatasetController',['$scope','$location','$window','SearchAPI','DefaultCustomViewConfig','config','MapbuilderStorage',function($scope,$location,$window,SearchAPI,DefaultCustomViewConfig,config,MapbuilderStorage){$scope.currentTab=null;$scope.$watch('ctx.parameters.tab',function(nv,ov){if(nv){delete $scope.ctx.parameters.tab;$scope.$broadcast('selectTab','main',nv);}});$scope.DefaultCustomViewConfig=DefaultCustomViewConfig;SearchAPI.metadata.basic().then(function(response){var templatesDefaultAndCustom=response.data.filter(function(e){return['default','custom'].includes(e.name);});$scope.templateDefaultAndCustom={name:"default+custom",schema:templatesDefaultAndCustom.reduce(function(acc,val){return acc.concat(val.schema);},[])};$scope.basicTemplates=response.data;});SearchAPI.metadata.interop().then(function(response){$scope.interopTemplates=response.data;});var sendVisualizationAnalytics=function(vizType){if(window.ga){ga(function(){var trackers=ga.getAll();for(var i=0;i<trackers.length;++i){var tracker=trackers[i];var baseUrlTokens=$window.location.pathname.split('/');baseUrlTokens=baseUrlTokens.slice(0,4);var baseUrl=baseUrlTokens.join('/');tracker.send('pageview',baseUrl+'/'+vizType+'/');}});}};$scope.advancedMapBuilderLink=function(slug){var mapConfig=window.mapConfig;var urlParams=$location.search();mapConfig.mapPresets={location:urlParams.location,basemap:urlParams.basemap};var mapObject={persist_id:slug,value:mapConfig,};this.mapStorage=MapbuilderStorage(slug);this.mapStorage.saveConfiguration(mapObject);$window.location.href='/map/'+slug+'/edit/';};var mobileParametersUnwatcher;$scope.toggleMobileFilters=function(){$scope.toggleState.expandedFilters=!$scope.toggleState.expandedFilters;if($scope.toggleState.expandedFilters){mobileParametersUnwatcher=$scope.$watch('ctx.parameters',function(nv,ov){if(!angular.equals(nv,ov)){$scope.toggleMobileFilters();}});}else{mobileParametersUnwatcher();}};$scope.$on('tabSelected',function(e,args){if(args.tabsName==='main'){sendVisualizationAnalytics(args.selection);}
$scope.currentTab=args.selection;});$scope.advancedChartBuilderLink=function(){return'/chart/?dataChart='+$location.search()['dataChart'];};$scope.canAccessData=function(){return $scope.ctx.dataset.has_records&&$scope.ctx.dataset.data_visible;};$scope.canAccessServices=function(){return $scope.ctx.dataset.hasFeature('api')&&$scope.ctx.dataset.data_visible;};$scope.user={is_authenticated:config.USER!==null,};$scope.domain={languages:config.AVAILABLE_LANGUAGES,current_language:config.LANGUAGE};}]);}());;(function(){'use strict';var mod=angular.module('ods.frontend');mod.service('odsReCaptcha',['$window','$document','domainConfig',function($window,$document,domainConfig){return function(element,recaptchaPubKey,lang,successCallback){if(!domainConfig['enable_form_recaptcha']){return function(){return{response:null};};}
var recaptchaWidgetId;var initCaptcha=function(){var recaptchaWidgetId=grecaptcha.render(element,{'sitekey':recaptchaPubKey,'callback':successCallback});if(typeof renderedCallback==="function"){renderedCallback(recaptchaWidgetId);}};$($window).on('recaptchaReady',function(){initCaptcha();});var parent=$document[0].getElementsByTagName('script')[0];var onloadscript=$document[0].createElement('script');onloadscript.text='var recaptchaReadyCallback = function() {$(window).trigger("recaptchaReady");}';var recaptchascript=$document[0].createElement('script');recaptchascript.async=1;recaptchascript.defer=1;recaptchascript.src='https://www.google.com/recaptcha/api.js?render=explicit&onload=recaptchaReadyCallback&hl='+lang;parent.parentNode.insertBefore(onloadscript,parent);onloadscript.parentNode.insertBefore(recaptchascript,onloadscript);return function(){return{response:grecaptcha.getResponse(recaptchaWidgetId)};}};}]);}());;